name: Build and deploy to ECS 
on: 
  push:
    branches: 
      - main 
jobs:
  build-deploy:
    runs-on: ubuntu-latest ### we are using a managed runner which is linux u ubuntu 
    permissions:
        contents: read   
        packages: write  
        id-token: write 
    steps: 

     ### clone repository into the runner     
      - name: clone repo 
        uses: actions/checkout@v3 
    ### install java and maven on the runner     
      - name: setup java and maven 
        uses: actions/setup-java@v3
        with:
            distribution: 'adopt'
            java-version:  '11' 
    ### create artifact with maven        
      - name: package-artifact  
        run: mvn package ### validate , compile the code , unit test , package code into an artifact    
       
      - name: code analysis with sonaqube 
        run: mvn sonar:sonar -Dsonar.projectKey=xashy-webapp-project -Dsonar.host.url=${{secrets.SONAR_HOST_URL}} -Dsonar.token=${{secrets.SONAR_LOGIN_TOKEN}}
    
    ## publish to github packages

      - name: publish to github packages
        run: mvn --batch-mode deploy
        env:
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    ### have github actions authenticate to aws through OIDC. 
    
      - name: auth to aws 
        uses: aws-actions/configure-aws-credentials@v3
        with:
            role-to-assume: arn:aws:iam::975050274549:role/github-xashy-webapp-ecs-deployment-role
            aws-region: us-east-1

    ### github actions uses docker to log in to ecr. 
      - name: login to amazon ecr 
        id: login-ecr 
        uses: aws-actions/amazon-ecr-login@v2

     ## use docker to containerise artifact       
      - name: build,tag, and push
        id: build-image
        env:
            REGISTRY: ${{steps.login-ecr.outputs.registry}}
            REPOSITORY: xashy-webapp
            IMAGE_TAG: ${{github.sha}}                
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: create new revision of the task definition.
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: xashy-webapp-container
          image: ${{steps.build-image.outputs.image}}
      
      - name: Update service with new revision.
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
            task-definition: ${{steps.task-def.outputs.task-definition}}
            service: xashy-webapp-service
            cluster: xashy-webapp-cluster
            wait-for-service-stability: true     

                
                
            
        

        